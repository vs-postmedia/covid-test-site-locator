{"version":3,"sources":["fonts/Shift-BoldItalic.otf","fonts/Shift-Bold.otf","fonts/BentonSansCond-Regular.otf","fonts/BentonSansCond-RegItalic.otf","fonts/BentonSansCond-Bold.otf","fonts/BentonSansCond-BoldItalic.otf","components/Autocomplete/Autocomplete.js","components/SummaryBox/SummaryBox.js","components/Card/Card.js","components/CardList/CardList.js","components/Layout/Layout.js","components/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","Autocomplete","props","onChange","e","suggestions","userInput","currentTarget","value","filteredSuggestions","filter","suggestion","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","onClick","innerText","onSelect","onKeyDown","state","keyCode","length","defaultText","suggestionsListComponent","this","className","map","index","key","type","placeholder","Component","defaultProps","SummaryBox","data","is_are","center","Card","d","name","city","address","phone","appointment_required","accept_kids","availability","criteria","CardList","sort","a","b","parseInt","route","i","id","Layout","appointment","appointment_bool","weekend_bool","filteredData","kids_toggle","locationCount","tmpData","fetch","dataURL","cache","then","response","json","cities","unshift","cityList","Set","open_weekend","filtered","event","filterData","status","tmp","filteredLocations","state_appointment","timestamp","Moment","calendar","results","handleInputChange","bind","checked","handleWeekendToggleChange","onColor","handleAppointmentToggleChange","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2eb5c8c6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Shift-BoldItalic.5c3edbfd.otf\";","module.exports = __webpack_public_path__ + \"static/media/Shift-Bold.cdd38a86.otf\";","module.exports = __webpack_public_path__ + \"static/media/BentonSansCond-Regular.43cd4ac7.otf\";","module.exports = __webpack_public_path__ + \"static/media/BentonSansCond-RegItalic.69a4217c.otf\";","module.exports = __webpack_public_path__ + \"static/media/BentonSansCond-Bold.6f6753fd.otf\";","module.exports = __webpack_public_path__ + \"static/media/BentonSansCond-BoldItalic.a6640d89.otf\";","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport './Autocomplete.css';\n\nclass Autocomplete extends Component {\n\tstatic propTypes = {\n\t\tsuggestions: PropTypes.instanceOf(Array)\n\t};\n\n\tstatic defaultProps = {\n\t\tsuggestions: []\n\t};\n\n  \tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdefaultText: 'Enter a city...',\n\t\t\t// The active selection's index\n\t\t\tactiveSuggestion: 0,\n\t\t\t// The suggestions that match the user's input\n\t\t\tfilteredSuggestions: [],\n\t\t\t// Whether or not the suggestion list is shown\n\t\t\tshowSuggestions: false,\n\t\t\t// What the user has entered\n\t\t\tuserInput: ''\n\t\t};\n\t}\n\n\t// Event fired when the input value is changed\n\tonChange = e => {\n\t\tconst { suggestions } = this.props;\n\t\tconst userInput = e.currentTarget.value;\n\n\t\t// Filter our suggestions that don't contain the user's input\n\t\tconst filteredSuggestions = suggestions.filter(\n\t\t  suggestion =>\n\t\t\tsuggestion.toLowerCase().indexOf(userInput.toLowerCase()) > -1\n\t\t);\n\n\t\t// Update the user input and filtered suggestions, reset the active\n\t\t// suggestion and make sure the suggestions are shown\n\t\tthis.setState({\n\t\t\tactiveSuggestion: 0,\n\t\t\tfilteredSuggestions,\n\t\t\tshowSuggestions: true,\n\t\t\tuserInput: e.currentTarget.value\n\t\t});\n\t};\n\n\t// Event fired when the user clicks on a suggestion\n\tonClick = e => {\n\t\t// Update the user input and reset the rest of the state\n\t\tthis.setState({\n\t\t\tactiveSuggestion: 0,\n\t\t\tfilteredSuggestions: [],\n\t\t\tshowSuggestions: false,\n\t\t\tuserInput: e.currentTarget.innerText\n\t\t});\n\n\t\t// send response back to layout\n\t\tthis.props.onSelect(e.currentTarget.innerText);\n\t};\n\n\t// Event fired when the user presses a key down\n\tonKeyDown = e => {\n\t\tconst { activeSuggestion, filteredSuggestions } = this.state;\n\t\n\t\t// User pressed the enter key, update the input and close the\n\t\t// suggestions\n\t\tif (e.keyCode === 13) {\n\t\t\tthis.setState({\n\t\t\t\tactiveSuggestion: 0,\n\t\t\t\tshowSuggestions: false,\n\t\t\t\tuserInput: filteredSuggestions[activeSuggestion]\n\t\t\t});\n\n\t\t\t// send response back to layout\n\t\t\tthis.props.onKeyDown(filteredSuggestions[activeSuggestion]);\n\t\t}\n\t\t// User pressed the up arrow, decrement the index\n\t\telse if (e.keyCode === 38) {\n\t\t \tif (activeSuggestion === 0) {\n\t\t\t\treturn;\n\t\t \t}\n\t\n\t\t\tthis.setState({ activeSuggestion: activeSuggestion - 1 });\n\t\t}\n\t\t// User pressed the down arrow, increment the index\n\t\telse if (e.keyCode === 40) {\n\t\t\tif (activeSuggestion - 1 === filteredSuggestions.length) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tthis.setState({ activeSuggestion: activeSuggestion + 1 });\n\t\t}\n\t};\n\n\trender() {\n\t\tconst {\n\t\t\tonChange,\n\t\t\tonClick,\n\t\t\tonKeyDown,\n\t\t\tstate: {\n\t\t\t\tactiveSuggestion,\n\t\t\t\tfilteredSuggestions,\n\t\t\t\tshowSuggestions,\n\t\t\t\tuserInput\n\t\t\t}\n\t\t} = this;\n\n\t\tlet suggestionsListComponent;\n\n\t\tif (showSuggestions && userInput) {\n\t\t  if (filteredSuggestions.length) {\n\t\t\tsuggestionsListComponent = (\n\t\t\t  <ul className='suggestions'>\n\t\t\t\t{filteredSuggestions.map((suggestion, index) => {\n\t\t\t\t  let className;\n\n\t\t\t\t  // Flag the active suggestion with a class\n\t\t\t\t  if (index === activeSuggestion) {\n\t\t\t\t\tclassName = 'suggestion-active';\n\t\t\t\t  }\n\n\t\t\t\t  return (\n\t\t\t\t\t<li\n\t\t\t\t\t  className={className}\n\t\t\t\t\t  key={suggestion}\n\t\t\t\t\t  onClick={onClick}\n\t\t\t\t\t>\n\t\t\t\t\t  {suggestion}\n\t\t\t\t\t</li>\n\t\t\t\t  );\n\t\t\t\t})}\n\t\t\t  </ul>\n\t\t\t);\n\t\t  } else {\n\t\t\tsuggestionsListComponent = (\n\t\t\t  <div className='no-suggestions'>\n\t\t\t\t<em>No suggestions, you're on your own!</em>\n\t\t\t  </div>\n\t\t\t);\n\t\t  }\n\t}\n\n\treturn (\n\t\t<Fragment>\n\t\t\t<input\n\t\t\t\tclassName='autocomplete'\n\t\t\t\ttype='text'\n\t\t\t\tonChange={onChange}\n\t\t\t\tonKeyDown={onKeyDown}\n\t\t\t\tplaceholder={this.state.defaultText}\n\t\t\t\tvalue={userInput}\n\t\t\t/>\n\t\t\t{suggestionsListComponent}\n\t\t</Fragment>\n\t);\n  }\n}\n\nexport default Autocomplete;","import React from 'react';\nimport './SummaryBox.css';\n\n\nconst SummaryBox = (props) => {\n\tconst length = props.data.length;\n\tconst is_are = length > 1 ? 'are' : 'is';\n\tconst center = length > 1 ? 'centers that match' : 'center that matches';\n\n\treturn (\n\t\t<div className=\"summary-box\">\t\t\n\t\t\t<h2>There {is_are} <span className=\"highlight\">{length}</span> testing {center} your criteria.</h2>\n\t\t</div>\n\t)\n}\n\nexport default SummaryBox;\n\n","import React from 'react';\nimport './Card.css';\n\nconst Card = (props) => {\n\tconst d = props.data;\n\n\t// const ha = d.ha.toLowerCase().replace(/\\s/g, '-');\n\t// const kids = d.accept_kids.toLowerCase() === 'yes' ? 'kids' : '';\n\t// const appointment = d.appointment_required.toLowerCase() === 'yes' ? 'appointment' : '';\n\t\n\treturn (\n\t\t<div className='card'>\n\t\t\t<header>\n\t\t\t\t<h3>{d.name}</h3>\n\t\t\t\t<p className=\"type\">{d.city}</p>\n\t\t\t</header>\n\n\t\t\t<div className=\"contact\">\n\t\t\t\t<p className=\"address\">{d.address}</p>\n\t\t\t\t<p><span className=\"bold\">Phone:</span> {d.phone}</p>\n\t\t\t</div>\n\n\t\t\t<div className=\"info\">\n\t\t\t\t<p>Appointment required: <span className=\"bold\">{d.appointment_required}</span></p>\n\t\t\t\t<p>Accepts children: <span className=\"bold\">{d.accept_kids}</span></p>\n\t\t\t</div>\n\t\t\t\n\t\t\t<h4>Details</h4>\n\t\t\t<p className=\"details\"><span className=\"bold\">Open: </span>{d.availability}</p>\n\t\t\t<p className=\"details\">{d.criteria}</p>\n\t\t</div>\n\t);\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from '../Card/Card';\nimport './CardList.css';\n\n\nconst CardList = (props) => {\n\tconst data = props.data.sort((a,b) => {\n\t\treturn parseInt(a.route) - parseInt(b.route);\n\t});\n\n \treturn (\n \t\t<div className=\"card-list\">\n \t\t\t{data.map((d,i) => {\n \t\t\t\treturn (\n \t\t\t\t\t<Card className='card' data={d} key={i} id={d.route}></Card>\n \t\t\t\t)\n \t\t\t})}\n \t\t</div>\n \t)\n\t\n}\n\n\nexport default CardList;\n","import React, { Component, Fragment } from 'react';\nimport * as Moment from 'moment-timezone';\nimport ToggleSwitch from 'react-switch';\nimport Autocomplete from '../Autocomplete/Autocomplete';\nimport SummaryBox from '../SummaryBox/SummaryBox';\nimport CardList from '../CardList/CardList';\nimport './Layout.css';\n\nexport class Layout extends Component {\n\tstate = {\n\t\tappointment: 'no',\n\t\tappointment_bool: false,\n\t\tweekend_bool: false,\n\t\tcity: '',\n\t\tdata: [],\n\t\tfilteredData: [],\n\t\tkids_toggle: 'yes',\n\t\tlocationCount: 0,\n\t\ttmpData: []\n\t};\n\n\tcomponentDidMount() {\n\t\t// fetch data file but never take a cached version\n\t\tfetch(this.props.dataURL, {cache: 'no-store'})\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\n\t\t\t\t// console.log(data)\n\n\t\t\t\tconst cities = data.map(d => d.city);\n\t\t\t\t// hack to display all cities if nothing is entered in the search box\n\t\t\t\tcities.unshift('');\n\n\t\t\t\tthis.setState({ \n\t\t\t\t\tdata: data,\n\t\t\t\t\tcityList: [...new Set(cities)],\n\t\t\t\t\tfilteredData: data,\n\t\t\t\t\ttmpData: data\n\t\t\t\t});\n\t\t\t});\n\t}\n\n\tfilterData(city, appointment, open_weekend) {\n\t\tlet filtered;\n\n\t\tif (city !== '') {\n\t\t\tfiltered = this.state.data\n\t\t\t\t.filter(d => d.city.toLowerCase() === city)\n\t\t\t\t.filter(d => appointment === 'yes' ? d.appointment_required.toLowerCase() === appointment : d.appointment_required)\n\t\t\t\t.filter(d => open_weekend ? d.open_weekend === 'Yes' : d);\n\t\t} else {\n\t\t\tfiltered = this.state.data\n\t\t\t\t.filter(d => appointment === 'yes' ? d.appointment_required.toLowerCase() === appointment : d.appointment_required)\n\t\t\t\t.filter(d => d.city)\n\t\t\t\t.filter(d => open_weekend ? d.open_weekend === 'Yes' : d);\n\t\t}\n\t\t\n\t\tthis.setState({\n\t\t\tfilteredData: filtered\n\t\t});\n\t}\n\thandleInputChange(event) {\n\t\tconst city = event.toLowerCase();\n\n\t\tthis.setState({\n\t\t\tcity: city\n\t\t});\n\n\t\tthis.filterData(city, this.state.appointment, this.state.weekend_bool);\n\t}\n\n\thandleAppointmentToggleChange(event) {\n\t\tconst appointment = event ? 'yes' : 'no';\n\t\tthis.setState({\n\t\t\tappointment: appointment,\n\t\t\tappointment_bool: event\n\t\t});\n\n\t\tthis.filterData(this.state.city, appointment, this.state.weekend_bool);\n\t}\n\n\thandleKidsToggleChange(event) {\n\t\tconst status = event ? 'yes' : 'no';\n\t\tconst tmp = this.state.filteredData;\n\n\t\tconst filteredLocations = status === 'no' ? this.state.filteredData.filter(d => d.accept_kids.toLowerCase() === 'no') : this.state.tmpData;\n\n\t\tthis.setState({\n\t\t\tkids_toggle: event,\n\t\t\tfilteredData: filteredLocations,\n\t\t\ttmpData: tmp\n\t\t});\n\t}\n\n\thandleWeekendToggleChange(event) {\n\t\tthis.setState({\n\t\t\tweekend_bool: event\n\t\t});\n\n\t\tthis.filterData(this.state.city, this.state_appointment, event);\n\t}\n\n\tsetTimestamp(timestamp) {\n\t\treturn Moment.tz(timestamp, 'America/Vancouver').calendar();\n\t}\n\n\trender() {\n\t\tlet results;\n\t\tif (this.state.filteredData.length > 0) {\n\t\t\tresults = <CardList data={this.state.filteredData}></CardList>;\n\t\t} else {\n\t\t\tresults = <p className=\"no-data\">No results</p>;\n\t\t}\n\t\treturn (\n\t\t\t<Fragment>\n\t\t\t\t<div id=\"filter-list\">\n\t\t\t\t\t<label className=\"autocomplete-container\">\n\t\t\t\t\t\t<h4>City:</h4>\n \t\t\t\t\t\t<Autocomplete \n \t\t\t\t\t\t\tsuggestions={this.state.cityList} \n \t\t\t\t\t\t\tonKeyDown={this.handleInputChange.bind(this)}\n \t\t\t\t\t\t\tonSelect={this.handleInputChange.bind(this)} \n \t\t\t\t\t\t/>\n \t\t\t\t\t</label>\n \t\t\t\t\t<label className=\"toggle-container\">\n \t\t\t\t\t\t<h4>Open<br/>Weekends</h4>\n\t\t\t\t\t\t<ToggleSwitch\n\t\t\t\t\t\t\tchecked={this.state.weekend_bool}\n\t\t\t\t\t\t\tclassName='appointment-switch'\n\t\t\t\t\t\t\tonChange={this.handleWeekendToggleChange.bind(this)}\n\t\t\t\t\t\t\tonColor='#9b3f86'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n \t\t\t\t\t<label className=\"toggle-container\">\n \t\t\t\t\t\t<h4>Appointment<br/>required</h4>\n\t\t\t\t\t\t<ToggleSwitch\n\t\t\t\t\t\t\tchecked={this.state.appointment_bool}\n\t\t\t\t\t\t\tclassName='appointment-switch'\n\t\t\t\t\t\t\tonChange={this.handleAppointmentToggleChange.bind(this)}\n\t\t\t\t\t\t\tonColor='#9b3f86'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</label>\n\t\t\t\t\t\n \t\t\t\t</div>\n\t\t\t\t\n\t\t\t\t<SummaryBox data={this.state.filteredData}></SummaryBox>\n\t\t\t\t{results}\n\t\t\t</Fragment>\n\t\t);\n\t}\n}\n\nexport default Layout;\n\n","import React from 'react';\nimport Layout from '../Layout/Layout';\nimport './App.css';\n\n\n// VARS\nconst dataUrl = 'https://vs-postmedia-data.sfo2.digitaloceanspaces.com/covid-testing-locations.json';\n\nfunction App() {\n\treturn (\n\t  \t<div className=\"App\">\n\t  \t\t<h1>Find a COVID-19 test site near you</h1>\n\t  \t\t<Layout dataURL={dataUrl}></Layout>\n\t  \t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\n// CSS\nimport './css/index.css';\n\n// FONTS\nimport './fonts/Shift-Bold.otf';\nimport './fonts/Shift-BoldItalic.otf';\nimport './fonts/Shift-BoldItalic.otf';\nimport './fonts/BentonSansCond-Regular.otf';\nimport './fonts/BentonSansCond-RegItalic.otf';\nimport './fonts/BentonSansCond-Bold.otf';\nimport './fonts/BentonSansCond-BoldItalic.otf';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}